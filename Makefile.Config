#
# This are configuration variables which will take effect is not overridden by 
# either the user or by the actual package.
#

prefix    = /usr/local
uid       = root
gid       = root
mode      = 644
exemode   = 755
suidmode  = 4755
sgidmode  = 2755
sugidmode = 6755

#For my compiler: Saying it, not to use
#special extensions but ANSI C(++) rules.
#
#XXX: Why doesn't we have any symbol like 'linux' defined with -ansi in C++?
#     (Maybe ANSI C++ says that this is good so, but I think that this is stupid.)
#
GLOBALCFLAGS  +=-pedantic

#Warning: If you use C99 you MUST explizitely define __cplusplus!
GLOBALCXXFLAGS+=-std=c++98
GLOBALCCFLAGS +=-std=gnu99

#Don't you want symbol tables in your executables and object files? Then
#comment this: (symbol tables are needed for gdb, makes the executables - and
#object files larger, the compilation and linking time longer, but don't affect
#the running speed of the executables itself.)
GLOBALCFLAGS  +=-g
GLOBALLDFLAGS +=-g

#Don't you want to get more warning while compiling? Then comment this. I re-
#commend, not to uncomment this to find expressions which might be incorrect.
GLOBALCFLAGS  +=-Wall -W

#For no optimization comment this next line. For better optimization, increment
#the value, for faster compilation decrement the value ('-O0' - or omitted -
#means NO optimization)
ifndef DONTOPTIMIZE
ifndef OPTIMIZATION
OPTIMIZATION=3
endif
GLOBALCFLAGS  +=-O$(OPTIMIZATION)
else
GLOBALCFLAGS  +=-O0
endif

#Do you want to use the profiler?
#(Not recommended to have turned on this by default!)
ifdef USE_PROFILER
GLOBALCFLAGS  +=-pg
GLOBALLDFLAGS +=-pg
endif

#Want you the preprocessed and compiled data be transmitted via pipes (instead
#of temporary files in /tmp)?
GLOBALCFLAGS  +=-pipe
GLOBALLDFLAGS +=-pipe
